{"ast":null,"code":"var _jsxFileName = \"/home/ourt/Documents/Delivery_Perso/my_nobo/src/components/info/info.jsx\";\nimport React from 'react';\nimport './info.css';\nimport { Component } from 'react';\nimport language_exist from './language';\nconst API = 'https://api.tvmaze.com/search/shows?q=';\nconst API_FLAGS = 'https://www.countryflags.io/';\nconst API_CAST = 'http://api.tvmaze.com/shows/';\nexport default class Info extends Component {\n  constructor() {\n    super();\n\n    this.get_data_char = () => {\n      fetch(API_CAST + this.state.id + \"/cast\").then(res => res.json()).then(json => {\n        this.setState({\n          isLoaded: true,\n          data_char: json\n        });\n        console.log(this.state.data_char);\n      });\n    };\n\n    this.find_name = () => {\n      let to_parse = window.location.pathname;\n      const name = to_parse.split('/');\n      return name[2];\n    };\n\n    this.parse_data = json => {\n      this.setState({\n        image: json[0].show.image ? json[0].show.image.medium : \"/NONE.png\",\n        score: json[0].show.rating.average,\n        title: json[0].show.name,\n        language: json[0].show.language,\n        genre: json[0].show.genres,\n        resume: json[0].show.summary,\n        status: json[0].show.status,\n        data_premiere: json[0].show.premiered,\n        id: json[0].show.id\n      });\n    };\n\n    this.get_data = name => {\n      fetch(API + name).then(res => res.json()).then(json => {\n        this.setState({\n          isLoaded: true,\n          data: json\n        });\n        this.parse_data(json);\n        this.set_flagscountry();\n        this.get_data_char();\n      });\n    };\n\n    this.set_flagscountry = () => {\n      var {\n        language\n      } = this.state;\n      language_exist.map((item, index) => {\n        if (item === language) {\n          this.setState({\n            flags: API_FLAGS + language_exist[index + 1] + \"/flat/64.png\"\n          });\n        }\n      });\n    };\n\n    this.componentDidMount = () => {\n      this.get_data(this.find_name());\n    };\n\n    this.state = {\n      data: [],\n      isLoaded: false,\n      image: \"NONE\",\n      score: 0,\n      language: \"NONE\",\n      genre: [],\n      status: \"NONE\",\n      title: \"NONE\",\n      resume: \"NONE\",\n      data_premiere: \"NONE\",\n      flags: \"NONE\",\n      id: 0,\n      data_char: []\n    };\n  }\n\n  render() {\n    var {\n      isLoaded,\n      data,\n      status,\n      data_premiere,\n      flags,\n      data_char\n    } = this.state;\n\n    if (!isLoaded) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 14\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 19\n        }\n      }, \"Loading\"));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: \"img_film\",\n        src: this.state.image,\n        alt: \"Image_film\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"info\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        className: \"Title_film\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }\n      }, this.state.title), /*#__PURE__*/React.createElement(\"h1\", {\n        className: \"Score\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }\n      }, \"Score : \", this.state.score), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"left_box\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 15\n        }\n      }, this.state.language, \": \", /*#__PURE__*/React.createElement(\"img\", {\n        src: flags,\n        alt: \"Language Flags\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 42\n        }\n      })), /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 15\n        }\n      }, \"Genres : \"), data[0].show.genres.map(item => /*#__PURE__*/React.createElement(\"li\", {\n        key: item,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 48\n        }\n      }, item)), /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 15\n        }\n      }, \"Status : \", status), /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 15\n        }\n      }, \"Premiere : \", data_premiere)), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"my_resume\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }\n      }, this.state.resume), /*#__PURE__*/React.createElement(\"h2\", {\n        className: \"Casting_title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }\n      }, \" Casting : \")), /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"Cast\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }\n      }, data_char.map(item => {\n        if (item.person.image) {\n          return /*#__PURE__*/React.createElement(\"li\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 17\n            }\n          }, /*#__PURE__*/React.createElement(\"h2\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 19\n            }\n          }, \" \", item.person.name, \" \"), /*#__PURE__*/React.createElement(\"img\", {\n            src: item.person.image.medium,\n            alt: \"actor\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 19\n            }\n          }));\n        } else {\n          return /*#__PURE__*/React.createElement(\"li\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 19\n            }\n          }, /*#__PURE__*/React.createElement(\"h2\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 21\n            }\n          }, \" \", item.person.name, \" \"), /*#__PURE__*/React.createElement(\"img\", {\n            src: \"/NONE.png\",\n            alt: \"NONE\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 21\n            }\n          }));\n        }\n      })));\n    }\n  }\n\n}","map":{"version":3,"sources":["/home/ourt/Documents/Delivery_Perso/my_nobo/src/components/info/info.jsx"],"names":["React","Component","language_exist","API","API_FLAGS","API_CAST","Info","constructor","get_data_char","fetch","state","id","then","res","json","setState","isLoaded","data_char","console","log","find_name","to_parse","window","location","pathname","name","split","parse_data","image","show","medium","score","rating","average","title","language","genre","genres","resume","summary","status","data_premiere","premiered","get_data","data","set_flagscountry","map","item","index","flags","componentDidMount","render","person"],"mappings":"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","sourcesContent":["import React from 'react'\nimport './info.css';\nimport { Component } from 'react';\nimport language_exist from './language'\n\nconst API = 'https://api.tvmaze.com/search/shows?q=';\nconst API_FLAGS = 'https://www.countryflags.io/'\nconst API_CAST = 'http://api.tvmaze.com/shows/'\n\nexport default class Info extends Component {\n  constructor() {\n    super();\n    this.state = {\n      data : [],\n      isLoaded: false,\n      image : \"NONE\",\n      score : 0,\n      language: \"NONE\",\n      genre: [],\n      status : \"NONE\",\n      title : \"NONE\",\n      resume : \"NONE\",\n      data_premiere : \"NONE\",\n      flags : \"NONE\",\n      id : 0,\n      data_char : [],\n    }\n  }\n\n  get_data_char = () => {\n    fetch(API_CAST + this.state.id + \"/cast\")\n    .then(res => res.json())\n    .then(json => {\n      this.setState({\n        isLoaded: true,\n        data_char: json,\n      })\n    console.log(this.state.data_char)\n    });\n  }\n\n  find_name = () => {\n    let to_parse = window.location.pathname;\n    const name = to_parse.split('/')\n\n    return (name[2]);\n  }\n  \n  parse_data = (json) => {\n    this.setState({\n      image: json[0].show.image ? json[0].show.image.medium : \"/NONE.png\",\n      score: json[0].show.rating.average,\n      title: json[0].show.name,\n      language: json[0].show.language,\n      genre: json[0].show.genres,\n      resume: json[0].show.summary,\n      status: json[0].show.status,\n      data_premiere: json[0].show.premiered,\n      id : json[0].show.id,\n    })\n  }\n\n  get_data = (name) => {\n    fetch(API + name)\n    .then(res => res.json())\n    .then(json => {\n      this.setState({\n        isLoaded: true,\n        data: json,\n      })\n    this.parse_data(json)\n    this.set_flagscountry()\n    this.get_data_char()\n    });\n  }\n\n  set_flagscountry = () => {\n    var { language } = this.state;\n    language_exist.map((item, index) => {\n      if (item === language) {\n        this.setState({\n          flags: API_FLAGS + language_exist[index + 1] + \"/flat/64.png\"\n        })\n      }\n    })\n  }\n\n  componentDidMount = () => {\n    this.get_data(this.find_name())\n  }\n  \n  render() {\n    var {isLoaded, data, status, data_premiere, flags, data_char} = this.state;\n    if (!isLoaded) {\n      return <div><h1>Loading</h1></div>;\n    } else {\n      return (\n        <div>\n          <img className=\"img_film\" src={this.state.image} alt=\"Image_film\"></img>\n          <div className=\"info\">\n            <h1 className=\"Title_film\">{this.state.title}</h1>\n            <h1 className=\"Score\">Score : {this.state.score}</h1>\n            <div className=\"left_box\">\n              <h1>{this.state.language}: <img src={flags} alt=\"Language Flags\"/></h1>\n              <h1>Genres : </h1>\n              {data[0].show.genres.map(item => <li key={item}>{item}</li>)}\n              <h1>Status : {status}</h1>\n              <h1>Premiere : {data_premiere}</h1>\n            </div>\n            <p className=\"my_resume\">{this.state.resume}</p>\n            <h2 className=\"Casting_title\"> Casting : </h2>\n          </div>\n            <ul className=\"Cast\">\n            {data_char.map(item => {\n              if (item.person.image) {\n                return (\n                <li> \n                  <h2> {item.person.name} </h2>\n                  <img src={item.person.image.medium} alt=\"actor\"/>\n                </li>\n                )\n              } else {\n                return (\n                  <li> \n                    <h2> {item.person.name} </h2>\n                    <img src=\"/NONE.png\" alt=\"NONE\"/>\n                  </li>\n                )\n              }\n            })}\n            </ul>\n        </div>\n      )\n    }\n  }\n}"]},"metadata":{},"sourceType":"module"}