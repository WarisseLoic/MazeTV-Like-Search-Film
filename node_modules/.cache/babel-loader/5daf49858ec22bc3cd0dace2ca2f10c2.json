{"ast":null,"code":"var _jsxFileName = \"/home/ourt/Documents/Delivery_Perso/my_nobo/src/components/info/info.jsx\";\nimport React from 'react';\nimport './info.css';\nimport { Component } from 'react';\nconst API = 'https://api.tvmaze.com/search/shows?q=';\nexport default class Info extends Component {\n  constructor() {\n    super();\n\n    this.find_name = () => {\n      let to_parse = window.location.pathname;\n      const name = to_parse.split('/');\n      return name[2];\n    };\n\n    this.parse_data = json => {\n      this.setState({\n        image: json[0].show.image ? json[0].show.image.medium : \"/NONE.png\",\n        score: json[0].show.score,\n        title: json[0].show.name,\n        language: json[0].show.language\n      });\n    };\n\n    this.get_data = name => {\n      fetch(API + name).then(res => res.json()).then(json => {\n        this.setState({\n          isLoaded: true,\n          data: json\n        });\n        this.parse_data(json);\n      });\n    };\n\n    this.componentDidMount = () => {\n      this.get_data(this.find_name());\n    };\n\n    this.state = {\n      data: [],\n      isLoaded: false,\n      image: \"NONE\",\n      score: 0,\n      language: \"NONE\",\n      genre: \"NONE\",\n      status: \"NONE\",\n      title: \"NONE\"\n    };\n  }\n\n  render() {\n    var {\n      isLoaded,\n      data,\n      image\n    } = this.state;\n\n    if (!isLoaded) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 14\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 19\n        }\n      }, \"Loading\"));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: \"img_film\",\n        src: this.state.image,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"info\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        className: \"Title_film\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 15\n        }\n      }, this.state.title)));\n    }\n  }\n\n}","map":{"version":3,"sources":["/home/ourt/Documents/Delivery_Perso/my_nobo/src/components/info/info.jsx"],"names":["React","Component","API","Info","constructor","find_name","to_parse","window","location","pathname","name","split","parse_data","json","setState","image","show","medium","score","title","language","get_data","fetch","then","res","isLoaded","data","componentDidMount","state","genre","status","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,YAAP;AACA,SAASC,SAAT,QAA0B,OAA1B;AAEA,MAAMC,GAAG,GAAG,wCAAZ;AAEA,eAAe,MAAMC,IAAN,SAAmBF,SAAnB,CAA6B;AAC1CG,EAAAA,WAAW,GAAG;AACZ;;AADY,SAcdC,SAdc,GAcF,MAAM;AAChB,UAAIC,QAAQ,GAAGC,MAAM,CAACC,QAAP,CAAgBC,QAA/B;AACA,YAAMC,IAAI,GAAGJ,QAAQ,CAACK,KAAT,CAAe,GAAf,CAAb;AACA,aAAQD,IAAI,CAAC,CAAD,CAAZ;AACD,KAlBa;;AAAA,SAoBdE,UApBc,GAoBAC,IAAD,IAAU;AACrB,WAAKC,QAAL,CAAc;AACZC,QAAAA,KAAK,EAAEF,IAAI,CAAC,CAAD,CAAJ,CAAQG,IAAR,CAAaD,KAAb,GAAqBF,IAAI,CAAC,CAAD,CAAJ,CAAQG,IAAR,CAAaD,KAAb,CAAmBE,MAAxC,GAAiD,WAD5C;AAEZC,QAAAA,KAAK,EAAEL,IAAI,CAAC,CAAD,CAAJ,CAAQG,IAAR,CAAaE,KAFR;AAGZC,QAAAA,KAAK,EAAEN,IAAI,CAAC,CAAD,CAAJ,CAAQG,IAAR,CAAaN,IAHR;AAIZU,QAAAA,QAAQ,EAAEP,IAAI,CAAC,CAAD,CAAJ,CAAQG,IAAR,CAAaI;AAJX,OAAd;AAMD,KA3Ba;;AAAA,SA6BdC,QA7Bc,GA6BFX,IAAD,IAAU;AACnBY,MAAAA,KAAK,CAACpB,GAAG,GAAGQ,IAAP,CAAL,CACCa,IADD,CACMC,GAAG,IAAIA,GAAG,CAACX,IAAJ,EADb,EAECU,IAFD,CAEMV,IAAI,IAAI;AACZ,aAAKC,QAAL,CAAc;AACZW,UAAAA,QAAQ,EAAE,IADE;AAEZC,UAAAA,IAAI,EAAEb;AAFM,SAAd;AAIF,aAAKD,UAAL,CAAgBC,IAAhB;AACC,OARD;AASD,KAvCa;;AAAA,SAyCdc,iBAzCc,GAyCM,MAAM;AACxB,WAAKN,QAAL,CAAc,KAAKhB,SAAL,EAAd;AACD,KA3Ca;;AAEZ,SAAKuB,KAAL,GAAa;AACXF,MAAAA,IAAI,EAAG,EADI;AAEXD,MAAAA,QAAQ,EAAE,KAFC;AAGXV,MAAAA,KAAK,EAAG,MAHG;AAIXG,MAAAA,KAAK,EAAG,CAJG;AAKXE,MAAAA,QAAQ,EAAE,MALC;AAMXS,MAAAA,KAAK,EAAE,MANI;AAOXC,MAAAA,MAAM,EAAG,MAPE;AAQXX,MAAAA,KAAK,EAAG;AARG,KAAb;AAUD;;AAiCDY,EAAAA,MAAM,GAAG;AACP,QAAI;AAACN,MAAAA,QAAD;AAAWC,MAAAA,IAAX;AAAiBX,MAAAA;AAAjB,QAA0B,KAAKa,KAAnC;;AACA,QAAI,CAACH,QAAL,EAAe;AACb,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAL,CAAP;AACD,KAFD,MAEO;AACL,0BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAA0B,QAAA,GAAG,EAAE,KAAKG,KAAL,CAAWb,KAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,eAEE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAI,QAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA4B,KAAKa,KAAL,CAAWT,KAAvC,CADJ,CAFF,CADF;AAQD;AACF;;AA5DyC","sourcesContent":["import React from 'react'\nimport './info.css';\nimport { Component } from 'react';\n\nconst API = 'https://api.tvmaze.com/search/shows?q=';\n\nexport default class Info extends Component {\n  constructor() {\n    super();\n    this.state = {\n      data : [],\n      isLoaded: false,\n      image : \"NONE\",\n      score : 0,\n      language: \"NONE\",\n      genre: \"NONE\",\n      status : \"NONE\",\n      title : \"NONE\",\n    }\n  }\n\n  find_name = () => {\n    let to_parse = window.location.pathname;\n    const name = to_parse.split('/')\n    return (name[2]);\n  }\n  \n  parse_data = (json) => {\n    this.setState({\n      image: json[0].show.image ? json[0].show.image.medium : \"/NONE.png\",\n      score: json[0].show.score,\n      title: json[0].show.name,\n      language: json[0].show.language,\n    })\n  }\n\n  get_data = (name) => {\n    fetch(API + name)\n    .then(res => res.json())\n    .then(json => {\n      this.setState({\n        isLoaded: true,\n        data: json,\n      })\n    this.parse_data(json)\n    });\n  }\n\n  componentDidMount = () => {\n    this.get_data(this.find_name())\n  }\n  \n  render() {\n    var {isLoaded, data, image} = this.state;\n    if (!isLoaded) {\n      return <div><h1>Loading</h1></div>;\n    } else {\n      return (\n        <div>\n          <img className=\"img_film\" src={this.state.image}></img>\n          <div className=\"info\">\n              <h1 className=\"Title_film\">{this.state.title}</h1>\n          </div>\n        </div>\n      )\n    }\n  }\n}"]},"metadata":{},"sourceType":"module"}